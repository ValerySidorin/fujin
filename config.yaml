fujin:
  addr: :4848
  ping_interval: 5s
  ping_timeout: 5s
  write_deadline: 10s
  force_terminate_timeout: 15s
  tls:
    server_cert_pem_path: ./assets/certs/fujin.io.pem
    server_key_pem_path: ./assets/certs/fujin.io-key.pem
  quic:
    max_incoming_streams: 1000
    max_idle_timeout: 5s
    keepalive_period: 2s
connectors:
  writers:
    # pub:
    #   protocol: kafka
    #   kafka:
    #     brokers: [localhost:9092, localhost:9093, localhost:9094]
    #     topic: my_pub_topic
    #     allow_auto_topic_creation: true
    #     linger: 10ms
    #     max_buffered_records: 10000
    #     disable_idempotent_write: false

    # pub:
    #   protocol: nats
    #   nats:
    #     url: nats://localhost:4222
    #     subject: my_subject
    # pub:
    #   protocol: amqp091
    #   amqp091:
    #     conn:
    #       url: amqp://guest:guest@localhost
    #     exchange:
    #       name: events
    #       kind: fanout
    #     queue:
    #       name: my_queue
    #     queue_bind:
    #       binding_key: my_routing_key
    #     publish:
    #       content_type: text/plain
    # pub:
    #   protocol: amqp10
    #   amqp10:
    #     conn:
    #       addr: amqp://artemis:artemis@localhost:61616
    #     sender:
    #       target: exchange
    pub:
      protocol: redis_streams
      redis_streams:
        init_address: ["localhost:6379"]
        stream: stream
        batch_size: 1000
        linger: 10ms
        # parse_msg_protocol: json
  readers:
    # sub:
    #   protocol: kafka
    #   kafka:
    #     brokers: [localhost:9092, localhost:9093, localhost:9094]
    #     topic: my_pub_topic
    #     group: fujin
    #     allow_auto_topic_creation: true
    #     max_poll_records: 10000
    #     auto_commit_interval: 5s
    #     auto_commit_marks: false
    #     block_rebalance_on_poll: false
    #     balancers:
    #       - round_robin # sticky/cooperative_sticky/range/round_robin (defaults to cooperative_sticky)
    #     fetch_isolation_level: read_commited # read_commited/read_uncommited (defaults to read_uncommited)
    # sub:
    #   protocol: nats
    #   nats:
    #     url: nats://localhost:4222
    #     subject: my_subject
    # sub:
    #   protocol: amqp091
    #   amqp091:
    #     conn:
    #       url: amqp://guest:guest@localhost
    #     exchange:
    #       name: events
    #       kind: fanout
    #     queue:
    #       name: my_queue
    #     queue_bind:
    #       routing_key: my_routing_key
    #     consume:
    #       consumer: fujin
    #     nack:
    #       requeue: true
    # sub:
    #   protocol: amqp10
    #   amqp10:
    #     conn:
    #       addr: amqp://artemis:artemis@localhost:61616
    #     receiver:
    #       source: exchange
    # sub:
    #   protocol: redis_pubsub
    #   redis_pubsub:
    #     init_address: ["localhost:6379"]
    #     channel: example-channel
    sub:
      protocol: redis_streams
      redis_streams:
        init_address: ["localhost:6379"]
        group:
          name: fujin
          consumer: fujin
        streams:
          stream:
            group_create_id: $
            start_id: ">"
        block: 3s
        # parse_msg_protocol: json

